/* tslint:disable */
/* eslint-disable */
/**
 * Patient Voice API
 * Patient Voice service API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Answer } from './Answer';
import {
    AnswerFromJSON,
    AnswerFromJSONTyped,
    AnswerToJSON,
    AnswerToJSONTyped,
} from './Answer';

/**
 * 
 * @export
 * @interface CreatePostDto
 */
export interface CreatePostDto {
    /**
     * The title of the post
     * @type {string}
     * @memberof CreatePostDto
     */
    title: string;
    /**
     * The category of the post
     * @type {number}
     * @memberof CreatePostDto
     */
    categoryId: number;
    /**
     * The answers of the post
     * @type {Array<Answer>}
     * @memberof CreatePostDto
     */
    answers: Array<Answer>;
}

/**
 * Check if a given object implements the CreatePostDto interface.
 */
export function instanceOfCreatePostDto(value: object): value is CreatePostDto {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('categoryId' in value) || value['categoryId'] === undefined) return false;
    if (!('answers' in value) || value['answers'] === undefined) return false;
    return true;
}

export function CreatePostDtoFromJSON(json: any): CreatePostDto {
    return CreatePostDtoFromJSONTyped(json, false);
}

export function CreatePostDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreatePostDto {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'],
        'categoryId': json['categoryId'],
        'answers': ((json['answers'] as Array<any>).map(AnswerFromJSON)),
    };
}

export function CreatePostDtoToJSON(json: any): CreatePostDto {
    return CreatePostDtoToJSONTyped(json, false);
}

export function CreatePostDtoToJSONTyped(value?: CreatePostDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'categoryId': value['categoryId'],
        'answers': ((value['answers'] as Array<any>).map(AnswerToJSON)),
    };
}

