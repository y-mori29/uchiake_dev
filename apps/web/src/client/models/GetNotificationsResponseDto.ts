/* tslint:disable */
/* eslint-disable */
/**
 * Patient Voice API
 * Patient Voice service API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NotificationDto } from './NotificationDto';
import {
    NotificationDtoFromJSON,
    NotificationDtoFromJSONTyped,
    NotificationDtoToJSON,
    NotificationDtoToJSONTyped,
} from './NotificationDto';

/**
 * 
 * @export
 * @interface GetNotificationsResponseDto
 */
export interface GetNotificationsResponseDto {
    /**
     * List of notifications
     * @type {Array<NotificationDto>}
     * @memberof GetNotificationsResponseDto
     */
    notifications: Array<NotificationDto>;
}

/**
 * Check if a given object implements the GetNotificationsResponseDto interface.
 */
export function instanceOfGetNotificationsResponseDto(value: object): value is GetNotificationsResponseDto {
    if (!('notifications' in value) || value['notifications'] === undefined) return false;
    return true;
}

export function GetNotificationsResponseDtoFromJSON(json: any): GetNotificationsResponseDto {
    return GetNotificationsResponseDtoFromJSONTyped(json, false);
}

export function GetNotificationsResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetNotificationsResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'notifications': ((json['notifications'] as Array<any>).map(NotificationDtoFromJSON)),
    };
}

export function GetNotificationsResponseDtoToJSON(json: any): GetNotificationsResponseDto {
    return GetNotificationsResponseDtoToJSONTyped(json, false);
}

export function GetNotificationsResponseDtoToJSONTyped(value?: GetNotificationsResponseDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'notifications': ((value['notifications'] as Array<any>).map(NotificationDtoToJSON)),
    };
}

