/* tslint:disable */
/* eslint-disable */
/**
 * Patient Voice API
 * Patient Voice service API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NotificationCommentDto } from './NotificationCommentDto';
import {
    NotificationCommentDtoFromJSON,
    NotificationCommentDtoFromJSONTyped,
    NotificationCommentDtoToJSON,
    NotificationCommentDtoToJSONTyped,
} from './NotificationCommentDto';

/**
 * 
 * @export
 * @interface NotificationDto
 */
export interface NotificationDto {
    /**
     * Notification ID
     * @type {string}
     * @memberof NotificationDto
     */
    id: string;
    /**
     * Creation timestamp
     * @type {Date}
     * @memberof NotificationDto
     */
    createdAt: Date;
    /**
     * Read status
     * @type {boolean}
     * @memberof NotificationDto
     */
    read: boolean;
    /**
     * Associated comment
     * @type {NotificationCommentDto}
     * @memberof NotificationDto
     */
    comment: NotificationCommentDto;
}

/**
 * Check if a given object implements the NotificationDto interface.
 */
export function instanceOfNotificationDto(value: object): value is NotificationDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('read' in value) || value['read'] === undefined) return false;
    if (!('comment' in value) || value['comment'] === undefined) return false;
    return true;
}

export function NotificationDtoFromJSON(json: any): NotificationDto {
    return NotificationDtoFromJSONTyped(json, false);
}

export function NotificationDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['createdAt'])),
        'read': json['read'],
        'comment': NotificationCommentDtoFromJSON(json['comment']),
    };
}

export function NotificationDtoToJSON(json: any): NotificationDto {
    return NotificationDtoToJSONTyped(json, false);
}

export function NotificationDtoToJSONTyped(value?: NotificationDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'createdAt': ((value['createdAt']).toISOString()),
        'read': value['read'],
        'comment': NotificationCommentDtoToJSON(value['comment']),
    };
}

