/* tslint:disable */
/* eslint-disable */
/**
 * Patient Voice API
 * Patient Voice service API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RefFeedbackCount } from './RefFeedbackCount';
import {
    RefFeedbackCountFromJSON,
    RefFeedbackCountFromJSONTyped,
    RefFeedbackCountToJSON,
    RefFeedbackCountToJSONTyped,
} from './RefFeedbackCount';
import type { PostPreview } from './PostPreview';
import {
    PostPreviewFromJSON,
    PostPreviewFromJSONTyped,
    PostPreviewToJSON,
    PostPreviewToJSONTyped,
} from './PostPreview';

/**
 * 
 * @export
 * @interface UserProfile
 */
export interface UserProfile {
    /**
     * The ID of the user
     * @type {string}
     * @memberof UserProfile
     */
    id: string;
    /**
     * The name of the user
     * @type {string}
     * @memberof UserProfile
     */
    name: string;
    /**
     * The age of the user
     * @type {number}
     * @memberof UserProfile
     */
    age: number;
    /**
     * The gender of the user
     * @type {string}
     * @memberof UserProfile
     */
    gender: string;
    /**
     * The posts of the user
     * @type {Array<PostPreview>}
     * @memberof UserProfile
     */
    posts: Array<PostPreview>;
    /**
     * The number of posts of the user
     * @type {number}
     * @memberof UserProfile
     */
    postCount: number;
    /**
     * The number of comments of the user
     * @type {number}
     * @memberof UserProfile
     */
    commentCount: number;
    /**
     * The number of comments on the user's posts
     * @type {number}
     * @memberof UserProfile
     */
    refCommentCount: number;
    /**
     * The number of comments on the user's posts
     * @type {Array<RefFeedbackCount>}
     * @memberof UserProfile
     */
    refFeedbackCounts: Array<RefFeedbackCount>;
}

/**
 * Check if a given object implements the UserProfile interface.
 */
export function instanceOfUserProfile(value: object): value is UserProfile {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('age' in value) || value['age'] === undefined) return false;
    if (!('gender' in value) || value['gender'] === undefined) return false;
    if (!('posts' in value) || value['posts'] === undefined) return false;
    if (!('postCount' in value) || value['postCount'] === undefined) return false;
    if (!('commentCount' in value) || value['commentCount'] === undefined) return false;
    if (!('refCommentCount' in value) || value['refCommentCount'] === undefined) return false;
    if (!('refFeedbackCounts' in value) || value['refFeedbackCounts'] === undefined) return false;
    return true;
}

export function UserProfileFromJSON(json: any): UserProfile {
    return UserProfileFromJSONTyped(json, false);
}

export function UserProfileFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserProfile {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'age': json['age'],
        'gender': json['gender'],
        'posts': ((json['posts'] as Array<any>).map(PostPreviewFromJSON)),
        'postCount': json['postCount'],
        'commentCount': json['commentCount'],
        'refCommentCount': json['refCommentCount'],
        'refFeedbackCounts': ((json['refFeedbackCounts'] as Array<any>).map(RefFeedbackCountFromJSON)),
    };
}

export function UserProfileToJSON(json: any): UserProfile {
    return UserProfileToJSONTyped(json, false);
}

export function UserProfileToJSONTyped(value?: UserProfile | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'age': value['age'],
        'gender': value['gender'],
        'posts': ((value['posts'] as Array<any>).map(PostPreviewToJSON)),
        'postCount': value['postCount'],
        'commentCount': value['commentCount'],
        'refCommentCount': value['refCommentCount'],
        'refFeedbackCounts': ((value['refFeedbackCounts'] as Array<any>).map(RefFeedbackCountToJSON)),
    };
}

