/* tslint:disable */
/* eslint-disable */
/**
 * Patient Voice API
 * Patient Voice service API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NotificationPostDto } from './NotificationPostDto';
import {
    NotificationPostDtoFromJSON,
    NotificationPostDtoFromJSONTyped,
    NotificationPostDtoToJSON,
    NotificationPostDtoToJSONTyped,
} from './NotificationPostDto';

/**
 * 
 * @export
 * @interface NotificationCommentDto
 */
export interface NotificationCommentDto {
    /**
     * Comment ID
     * @type {string}
     * @memberof NotificationCommentDto
     */
    id: string;
    /**
     * Comment content
     * @type {string}
     * @memberof NotificationCommentDto
     */
    content: string;
    /**
     * Associated post
     * @type {NotificationPostDto}
     * @memberof NotificationCommentDto
     */
    post: NotificationPostDto;
}

/**
 * Check if a given object implements the NotificationCommentDto interface.
 */
export function instanceOfNotificationCommentDto(value: object): value is NotificationCommentDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('post' in value) || value['post'] === undefined) return false;
    return true;
}

export function NotificationCommentDtoFromJSON(json: any): NotificationCommentDto {
    return NotificationCommentDtoFromJSONTyped(json, false);
}

export function NotificationCommentDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationCommentDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'content': json['content'],
        'post': NotificationPostDtoFromJSON(json['post']),
    };
}

export function NotificationCommentDtoToJSON(json: any): NotificationCommentDto {
    return NotificationCommentDtoToJSONTyped(json, false);
}

export function NotificationCommentDtoToJSONTyped(value?: NotificationCommentDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'content': value['content'],
        'post': NotificationPostDtoToJSON(value['post']),
    };
}

