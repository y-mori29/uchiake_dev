/* tslint:disable */
/* eslint-disable */
/**
 * Patient Voice API
 * Patient Voice service API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SubAnswerCreateDto } from './SubAnswerCreateDto';
import {
    SubAnswerCreateDtoFromJSON,
    SubAnswerCreateDtoFromJSONTyped,
    SubAnswerCreateDtoToJSON,
    SubAnswerCreateDtoToJSONTyped,
} from './SubAnswerCreateDto';

/**
 * 
 * @export
 * @interface CreateSubPostDto
 */
export interface CreateSubPostDto {
    /**
     * The title of the post
     * @type {string}
     * @memberof CreateSubPostDto
     */
    title: string;
    /**
     * The id of parent post
     * @type {string}
     * @memberof CreateSubPostDto
     */
    postId: string;
    /**
     * The sub answers of the sub post
     * @type {Array<SubAnswerCreateDto>}
     * @memberof CreateSubPostDto
     */
    subAnswers: Array<SubAnswerCreateDto>;
}

/**
 * Check if a given object implements the CreateSubPostDto interface.
 */
export function instanceOfCreateSubPostDto(value: object): value is CreateSubPostDto {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('postId' in value) || value['postId'] === undefined) return false;
    if (!('subAnswers' in value) || value['subAnswers'] === undefined) return false;
    return true;
}

export function CreateSubPostDtoFromJSON(json: any): CreateSubPostDto {
    return CreateSubPostDtoFromJSONTyped(json, false);
}

export function CreateSubPostDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateSubPostDto {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'],
        'postId': json['postId'],
        'subAnswers': ((json['subAnswers'] as Array<any>).map(SubAnswerCreateDtoFromJSON)),
    };
}

export function CreateSubPostDtoToJSON(json: any): CreateSubPostDto {
    return CreateSubPostDtoToJSONTyped(json, false);
}

export function CreateSubPostDtoToJSONTyped(value?: CreateSubPostDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'postId': value['postId'],
        'subAnswers': ((value['subAnswers'] as Array<any>).map(SubAnswerCreateDtoToJSON)),
    };
}

