/* tslint:disable */
/* eslint-disable */
/**
 * Patient Voice API
 * Patient Voice service API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SubAnswer } from './SubAnswer';
import {
    SubAnswerFromJSON,
    SubAnswerFromJSONTyped,
    SubAnswerToJSON,
    SubAnswerToJSONTyped,
} from './SubAnswer';

/**
 * 
 * @export
 * @interface SubPost
 */
export interface SubPost {
    /**
     * The unique identifier of the sub-post
     * @type {string}
     * @memberof SubPost
     */
    id: string;
    /**
     * The title of the sub-post
     * @type {string}
     * @memberof SubPost
     */
    title: string;
    /**
     * The sub-answers of the sub-post
     * @type {Array<SubAnswer>}
     * @memberof SubPost
     */
    subAnswers: Array<SubAnswer>;
}

/**
 * Check if a given object implements the SubPost interface.
 */
export function instanceOfSubPost(value: object): value is SubPost {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('subAnswers' in value) || value['subAnswers'] === undefined) return false;
    return true;
}

export function SubPostFromJSON(json: any): SubPost {
    return SubPostFromJSONTyped(json, false);
}

export function SubPostFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubPost {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'subAnswers': ((json['subAnswers'] as Array<any>).map(SubAnswerFromJSON)),
    };
}

export function SubPostToJSON(json: any): SubPost {
    return SubPostToJSONTyped(json, false);
}

export function SubPostToJSONTyped(value?: SubPost | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'title': value['title'],
        'subAnswers': ((value['subAnswers'] as Array<any>).map(SubAnswerToJSON)),
    };
}

