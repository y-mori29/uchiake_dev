services:
  reverse-proxy:
    image: nginx:latest
    container_name: reverse-proxy
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
      - web

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    image: patient-voice-api:latest
    container_name: api
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:testpassword@db:5432/mydatabase
      - AUTH0_ISSUER_BASE_URL=https://dev-mzp22vnz0fpdeay0.us.auth0.com
      - AUTH0_AUDIENCE=http://localhost:8080
    stdin_open: true
    tty: true
    volumes:
      - ./apps:/app/apps
    command: npm run dev
    depends_on:
      - db

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    image: patient-voice-web:latest
    container_name: web
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - NEXT_PUBLIC_AUTH0_ISSUER_BASE_URL=https://dev-mzp22vnz0fpdeay0.us.auth0.com
      - NEXT_PUBLIC_AUTH0_CLIENT_ID=OYmkniVyQMijkcNgqgR8kWWOfEk8UXkz
      - NEXT_PUBLIC_AUTH0_AUDIENCE=http://localhost:8080
    stdin_open: true
    tty: true
    volumes:
      - ./apps:/app/apps
    command: npm run dev

  db:
    image: postgres:17
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: testpassword
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"